grammar LabelSelector
  rule selector
    ( requirement [\s]* ',' selector ) <Selector>
    /
    requirement
  end

  rule requirement
    key (exact_match_restriction / set_based_restriction) <Requirement>
  end

  rule key
    [\s]* [\w]+ <Key>
  end

  rule value
    [\s]* [\w]+ [\s]* <Value>
  end

  rule exact_match_restriction
    comparator value
  end

  rule comparator
   [\s]* ('=' / '==' / '!=') <Comparator>
  end

  rule set_based_restriction
    [\s]+ inclusion_exclusion [\s]+ value_set
  end

  rule inclusion_exclusion
    'in' / 'notin' <InclusionExclusion>
  end

  rule value_set
    "(" values ")"
  end

  rule values
    ( value "," values ) / value <Values>
  end
end

